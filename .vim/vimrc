"
"
" The first part comes (in edited form) from
" https://github.com/mhinz/vim-galore/blob/master/static/minimal-vimrc.vim
"
"
set nocompatible
filetype plugin indent on                       " Load plugins according to detected filetype.
syntax on                                       " Enable syntax highlighting.
set autoindent                                  " Indent according to previous line.
set expandtab                                   " Use spaces instead of tabs.
set softtabstop =4                              " Tab key indents by 4 spaces.
set shiftwidth  =4                              " >> indents by 4 spaces.
set shiftround                                  " >> indents to next multiple of 'shiftwidth'.
set backspace   =indent,eol,start               " Make backspace work as you would expect.
set hidden                                      " Switch between buffers without having to save first.
set incsearch                                   " Highlight while searching with / or ?.
set nohlsearch                                  " Keep matches highlighted.
set ttyfast                                     " Faster redrawing.
set lazyredraw                                  " Only redraw when necessary.
set splitbelow                                  " Open new windows below the current window.
set splitright                                  " Open new windows right of the current window.
set wrapscan                                    " Searches wrap around end-of-file.
set ignorecase
set smartcase
set report      =0                              " Always report changed lines.
set synmaxcol   =200                            " Only highlight the first 200 columns.
set number
set nostartofline

set encoding=utf-8
set fileencodings=utf-8,iso-8859-7,latin1

highlight LineNr ctermfg=235
if has('multi_byte') && &encoding ==# 'utf-8'
  let &listchars = 'tab:▸ ,extends:❯,precedes:❮,nbsp:±'
else
  let &listchars = 'tab:> ,extends:>,precedes:<,nbsp:.'
endif

"
" Put all temporary files under the same directory.
" https://github.com/mhinz/vim-galore#handling-backup-swap-undo-and-viminfo-files
set nobackup
set directory   =$HOME/.vim/files/swap//
set updatecount =100
set undofile
set undodir     =$HOME/.vim/files/undo/
set viminfo     ='100,n$HOME/.vim/files/info/viminfo
set nobackup

"
" Keep the search results centered
"
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz


"
" colors, wrap, greek,  etc.
"
set t_Co=256
set nowrap           				" do not automatically wrap on load
set formatoptions-=t 				" do not automatically wrap text when typing
set whichwrap+=<,>,h,l,[,]			" left and right wrap to previous next lines
nnoremap <C-P> :e ++enc=iso-8859-7 %:p<CR>		" greek encoding for text
helptag ~/.vim/doc/				" help files 
nnoremap <Tab> :bnext<CR>			" cycling between buffers
nnoremap <S-Tab> :bprevious<CR>

highlight DiffAdd    cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffDelete cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffChange cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffText   cterm=bold ctermfg=10 ctermbg=88 gui=none guifg=bg guibg=Red


" have Vim jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif


"
" Print buffer straight with lpr
"
nnoremap <C-P> :%w !lpr<CR>


"
" For spell check
"
set spelllang=en,el
inoremap <C-L> <C-G>u<Esc>[s1z=`]a<C-G>u
nnoremap <C-K> <Esc>[sve<C-G>
inoremap <C-K> <Esc>[sve<C-G>
snoremap <C-K> <Esc>b[sviw<C-G>
hi clear SpellBad
hi clear SpellCap
hi SpellBad cterm=underline
hi SpellCap cterm=bold


" colors for folded 
hi Folded ctermbg=DarkGrey



"
" make vim easier on the eyes when looking at code
"
hi clear MatchParen
hi MatchParen cterm=underline


"
" for csv pluggin
"
let g:csv_autocmd_arrange = 1
hi CSVColumnHeaderEven  term=bold ctermbg=5 guibg=DarkMagenta
hi CSVColumnHeaderOdd   term=bold ctermbg=5 guibg=DarkMagenta

"
" _j magic
"
source $VIMRUNTIME/macros/justify.vim
set tw=70


"
" airline things
"
set noshowmode					" vim-airline + the (initially) hidden tabline
set laststatus=2				" . .
let g:airline_powerline_fonts = 1		" . .
let g:airline#extensions#disable_rtp_load = 1
let g:airline#extensions#whitespace#checks = []
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
autocmd VimEnter * :doautocmd user AirlineToggledOn


let s:hidden_all = 0				" SHIFT-H hides everything from both status lines
function! ToggleHiddenAll()			" . .
    if s:hidden_all  == 0			" . .
        let s:hidden_all = 1
        set noshowmode
        set noruler
        set laststatus=0
        set noshowcmd
        let g:airline#extensions#tabline#enabled = 0
        doautocmd user AirlineToggledOff
    else
        let s:hidden_all = 0
        set showmode
        set ruler
        set laststatus=2
        set showcmd
        doautocmd user AirlineToggledOn
    endif
endfunction
nnoremap <S-h> :call ToggleHiddenAll()<CR>

